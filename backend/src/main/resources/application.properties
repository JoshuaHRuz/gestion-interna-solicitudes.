# Nombre de la aplicación
spring.application.name=gestion-solicitudes

# Configuración del Puerto del Servidor
# Railway generalmente inyecta la variable de entorno PORT.
# Usamos 8080 como fallback para desarrollo local si PORT no está definida.
server.port=${PORT:8080}

# Configuración de la Base de Datos MySQL
# Prioriza las variables de entorno si están disponibles, con fallbacks.
# Asegúrate de que estas variables (SPRING_DATASOURCE_URL, etc.) estén configuradas en Railway.
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://mysql.railway.internal:3306/railway?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:ZhkhDSJtkNCHMOHdtdWlBbrctoKFlVeT}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Propiedades JPA y Hibernate
# 'validate' es más seguro para esquemas existentes, 'update' intenta modificarlo.
# 'create' o 'create-drop' para desarrollo si quieres que Hibernate genere/borre el esquema.
# Con DataInitializer, 'update' o 'validate' suelen ser buenas opciones.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Propiedades de Inicialización SQL (si decides usar un archivo data.sql en el futuro)
# spring.sql.init.mode=never # O 'always' o 'embedded'

# Configuración JWT
# Estas DEBEN ser configuradas como variables de entorno en Railway por seguridad.
app.jwtSecret=${APP_JWT_SECRET:=======================BezKoder=Spring==========================} # CAMBIA ESTE VALOR POR DEFECTO Y USA ENV VAR
app.jwtExpirationMs=${APP_JWT_EXPIRATION_MS:86400000} # 24 horas (86400000 ms)
